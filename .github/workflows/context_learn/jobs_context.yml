# The job context is only available in reuseable workflows, and can only be used to set outputs for a reuseable workflow

# Use the jobs context to set outputs for a reusealbe workflow
name: Reuseable workflow

# Note how the outputs flow up form the steps, to the job, then to the workflow_call trigger.
on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      # outputs key1: firstword
      firstword:
        # the description for outputs key
        description: "The first output string"
        # the firstword value is from jobs.example.outpus.output1
        value: ${{ jobs.example_job.outputs.output1 }}
      secondword:
        description: "the second output string"
        value: ${{ jobs.example_job.outputs.output2 }}

jobs:
  example_job:
    name: Generate output
    runs-on: ubuntu-latest
    # define the outputs for job
    outputs:
      # step1, step2 is id for the step
      # the output1 value form step1.outputs.firstword
      output1: ${{ steps.step1.outputs.firstword }}
      output2: ${{ steps.step2.outputs.secondword }}
    steps:
      - id: step1
        # put firstword=hello into $GITHUB_OUTPUT file.
        run: echo "firstword=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT
